import{workdayAPI as l}from"./workdayAPI.d3a7ad20.js";import{b as f}from"./syncEmployeeWithWorkday.2389a0ce.js";import{q as d,u as p}from"./quickbase.ce7d8f68.js";import{dayjs as c}from"./dayjs.da6fbf87.js";import"./dataStore.505188fd.js";import"./dataStore.8f46c1d0.js";import{u as y}from"./useQuerySaver.ae1b8d62.js";const g=async({release:t})=>{const r={workerId:t[50],includeTransactionLogs:!0,sandbox:t[74]},{data:e}=await l.getWorker(r),n=e[0];if(!n)return t;f({id:t[25],worker:n});const{employmentData:o,jobHistory:s}=n||{employmentData:null,jobHistory:null};if(!o||!s)return t;let i=[];if(t.jobHistory=s,s.forEach(a=>{if(Object.keys(a).includes("terminateEmployee")){const{terminateEmployee:m}=a;i.push(m)}}),i.length>0){const a=i.find(u=>c(u.logEntryMoment)>c(t[1].$d));i=i.sort((u,m)=>c(u.logEffectiveMoment)>c(m.logEffectiveMoment)?-1:1),a&&(t.lastTerm=a,t.terminated=!o.workerStatus.active,t.termEntryDate=c(a.logEntryMoment))}else return t;return t.terminations=i,t.workday=n,t},j=async({array:t})=>{const r=[];return t.forEach(async o=>{const s=g({release:o});r.push(s)}),(await Promise.allSettled(r)).map(o=>o.value)},$=async({release:t})=>{const r=t[93],e=t[102]&&t[t[102]]?t[t[102]]:null,n=e?y({status:r,id:e}):null;if(n){const{data:o}=await d.fetchFromHiringApp({fields:[n]}),s=o;return s?{reassigned:s[1].$d>t[1].$d,timestamp:s[1].$d}:{reassigned:!1,timestamp:null}}else return{reassigned:!1,timestamp:null}},q=async({release:t,disposition:r,ts:e,updatedBy:n})=>{p();const o=n;o&&(o.access&&delete o.access,o.permissions&&delete o.permissions);const{data:s}=await d.upsertRecordsXML({to:"bp3ga39ut",data:[{3:{value:t[3]},42:{value:"Complete"},43:{value:r},44:{value:t[44].$d||e},73:{value:"Cancelled"},75:{value:t[75]?JSON.stringify(t[75]):o?JSON.stringify(o):""},77:{value:t[77].$d||c()}}],fieldsToReturn:[80],formatObject:80});return s[0][80]};export{g as a,$ as b,j as c,q as u};
