var _=Object.defineProperty;var c=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var i=(o,t,a)=>t in o?_(o,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[t]=a,p=(o,t)=>{for(var a in t||(t={}))b.call(t,a)&&i(o,a,t[a]);if(c)for(var a of c(t))y.call(t,a)&&i(o,a,t[a]);return o};import{a as S}from"./QSelect.fdd46d88.js";import{u as U}from"./use-quasar.4e60ec94.js";import{u as k,l as q}from"./i18n.8e2a8376.js";import{c as w,q as l}from"./quickbase.c9a9fc75.js";import{z as V,am as $,G as B,a6 as m,b as D}from"./index.6c674a19.js";const I={__name:"languageSelector",setup(o){const t=U(),{locale:a,availableLocales:f}=k(),{setLang:u,currentLang:d}=w();d||u(a.value);const v=f.map(e=>({label:q[`${e}`].nativeName,value:e})),r=async e=>{const s=l.getOfficeLocation(),n=p({339:{value:e}},s&&{16:{value:s.rid}});return await l.updateEmployeeData({fields:n})},g=async e=>{const s={26:{value:"now"},100:{value:e}};return await l.updateUserData({fields:s})},L=e=>{t.lang.set(e),g(e),u(e),e==="en-US"?r(1):e==="es"&&r(2)};return(e,s)=>(V(),$(S,B({modelValue:m(a),"onUpdate:modelValue":[s[0]||(s[0]=n=>D(a)?a.value=n:null),L],options:m(v)},e.$attrs,{"emit-value":"","map-options":""}),null,16,["modelValue","options"]))}};export{I as _};
