import{s as f}from"./quickbase.4804bb81.js";import{l as p,i as b,r as d}from"./index.4017ca31.js";function v(r){if(r.hasOwnProperty("possibleRulesFor"))return r;var i=d(!0);r.on("updated",function(){i.value=!i.value});var t=r.possibleRulesFor.bind(r);return r.possibleRulesFor=function(e,n){return i.value=i.value,t(e,n)},r.can=r.can.bind(r),r.cannot=r.cannot.bind(r),r}var c=Symbol("ability");function g(){var r=b(c);if(!r)throw new Error("Cannot inject Ability instance because it was not provided");return r}function h(r){return"a"in r?"a":"this"in r?"this":"an"in r?"an":""}p({name:"Can",props:{I:String,do:String,a:[String,Function],an:[String,Function],this:[String,Function,Object],on:[String,Function,Object],not:Boolean,passThrough:Boolean,field:String},setup:function(i,t){var e=t.slots,n=i,o="do",a="on";if(o in i||(o="I",a=h(i)),!n[o])throw new Error("Neither `I` nor `do` prop was passed in <Can>");if(!e.default)throw new Error("Expects to receive default slot");var u=g();return function(){var l=u.can(n[o],n[a],n.field),s=i.not?!l:l;return i.passThrough?e.default({allowed:s,ability:u}):s?e.default():null}}});function S(r,i,t){if(!i||!(i instanceof f))throw new Error("Please provide an Ability instance to abilitiesPlugin plugin");r.provide(c,v(i)),t&&t.useGlobalProperties&&(r.config.globalProperties.$ability=i,r.config.globalProperties.$can=i.can.bind(i))}export{S as l,g as u};
